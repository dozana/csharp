<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>